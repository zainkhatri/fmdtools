#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Architecture definition for {{ spec.name }} model.
"""

from fmdtools.define.architecture.function import FunctionArchitecture

# Import functions
{% for func in functions %}
{% set mapping = function_mapping[func.name] %}
from .{{ mapping.safe_name }} import {{ mapping.class_name }}
{% endfor %}

# Import flows
{% if spec.flows %}
from .flows import {% for flow in spec.flows %}{{ flow_mapping[flow.name].class_name }}{% if not loop.last %}, {% endif %}{% endfor %}
{% endif %}


class {{ arch_class_name }}(FunctionArchitecture):
    """{{ arch.name }} architecture implementation."""
    
    __slots__ = ()
    default_sp = dict(end_time=100, units='sec')
    default_track = {'fxns': 'all', 'flows': 'all'}
    
    def init_architecture(self, **kwargs):
        """Initialize the architecture with flows and functions."""
        # Add flows
{% for flow in spec.flows %}
{% set mapping = flow_mapping[flow.name] %}
        self.add_flow("{{ mapping.safe_name }}", {{ mapping.class_name }})
{% endfor %}

        # Add functions
{% for func_name in arch.functions %}
{% set mapping = function_mapping[func_name] %}
        self.add_fxn("{{ mapping.safe_name }}", {{ mapping.class_name }})
{% endfor %}

        # Define connections
{% for conn in arch.connections %}
{% set from_mapping = function_mapping[conn.from_fn] %}
{% set to_mapping = function_mapping[conn.to_fn] %}
{% set flow_mapping_item = flow_mapping[conn.flow_name] %}
        # Connect {{ conn.from_fn }} to {{ conn.to_fn }} via {{ conn.flow_name }}
        # TODO: Define specific connection pattern
{% endfor %}